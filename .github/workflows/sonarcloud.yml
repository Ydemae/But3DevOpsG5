name: SonarQube Cloud
on:
  push:
    branches: [ "Arthur", "main" ]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      mysqlService:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: allard19u_coa_banque
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --host=mysqlService --user=root --password=secret" --health-timeout=30s --health-retries=3 --health-start-period=10s

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'zulu'

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('_00_ASBank2023/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2



      - name: Set up database connection
        run: |
          echo "${{ secrets.DATABASE_SCRIPT }}" > create_db.sql
          until mysql --host=mysqlService --user=root --password=secret --execute="SELECT 1"; do
            echo "Waiting for MySQL to be available..."
            sleep 5s
          done

          mysql --host=mysqlService --user=root --password=secret --database=allard19u_coa_banque < create_db.sql

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd _00_ASBank2023
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Ydemae_But3DevOpsG5 -Dsonar.organization=g5but3devops